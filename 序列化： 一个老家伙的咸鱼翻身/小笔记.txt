链接：https://mp.weixin.qq.com/s/ybpdxx2lvZNNqaoXHG24Zg

关键词概念：序列化：把一个Java 对象变成二进制的字节流，或者反过来把字节流变成Java对象
			xml/json：一种中立语言，任何编程语言都可以对其解析，提取属性变成自己编程语言对象
			protocol buffer：由Google开发的一套对数据结构进行序列化的方法，可用做通信协议，数据存储格式，等等。其特点是不限语言、不限平台、扩展性强
			Java RPC：Java平台的远程服务调用
			中间层：有点像两个不同国家语言的人，中间需要个翻译完成沟通。java和Python调用，中间的需要个把java对象转成通用，让Python能解析，或者把Python转成Java能解析
			
Java序列化把Java对象序列化成二进制，体积小，可以存储在硬盘上，也可以通过网络传输。即时jvm停掉，序列化文件持久化在硬盘上，当jvm启动是可以通过反序列化成java对象。在Java平台服务器之前服务调用，
可以把java对象序列化成二进制文件传输到另一台Jvm服务器，体积小，不浪费资源，但是只能在Jvm平台下，其他语言解析不了。
XML做为中立语言，任何编程语言都可以的解析，任何平台服务调用都可以解析这种格式语言，但是冗余标签太多，导致体积过大，浪费带宽资源。而后面的json虽然减轻了体积，但是终究跟二进制文件比还是差远。
在现在资源利用率需要贼高的web时代，需要一种中间协议，能让各个平台解析，而体积又小的东东。protocol buffer就出现了，远程服务调用，消息用protocol buffer序列化成二进制文件传输到另一边，然后到
达后又可以用protocol buffer反序列化解析成自己需要的类型。
			